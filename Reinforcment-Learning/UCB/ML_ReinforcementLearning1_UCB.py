# -*- coding: utf-8 -*-
"""ML-ReinforcementLearning1-UCB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N6Wa5f-k9-Jq1C1aUiTr_VLvpxY59nWg
"""

#importing libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


#dataset
dataset = pd.read_csv('Ads_CTR_Optimisation.csv')

#creating model
import math
#number of times ads played
N = 10000
#number of ads
d = 10
ads_selected = []
numbers_of_selections = [0] * d
sums_of_rewards = [0] * d
total_reward = 0
#loop over all the ads - always maintain a ad variable 
#index which has highest UCB will be asinged as ad
for n in range(0, N):
  ad = 0
  max_upper_bound = 0
  #every iteration we will calculate avg and delta_i
  for i in range(0, d):
    if (numbers_of_selections[i] > 0):
      average_reward = sums_of_rewards[i] / numbers_of_selections[i]
      delta_i = math.sqrt(3/2 * math.log(n + 1) / numbers_of_selections[i])
      upper_bound = average_reward + delta_i
    else:
      #here we are ensureing that each ad select at least one time 
      upper_bound = 1e400
    if (upper_bound > max_upper_bound):
      max_upper_bound = upper_bound
      ad = i
  ads_selected.append(ad)
  numbers_of_selections[ad] +=  1
  reward = dataset.values[n, ad]
  sums_of_rewards[ad] += reward
  total_reward += reward

  #visualising output
plt.hist(ads_selected)
plt.title('Histogram of ads selections')
plt.xlabel('Ads')
plt.ylabel('Number of times each ad was selected')
plt.show()